{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setIsTitle","setTitle","isTitle","isLoading","handleAddMovie","_useState","useState","_useState2","_slicedToArray","query","setQuerty","useEffect","_Fragment","onSubmit","event","preventDefault","handleFormSubmint","htmlFor","type","id","placeholder","value","onChange","target","_objectSpread","concat","disabled","onClick","setTimeout","App","setMovies","_useState3","_useState4","searchedMovie","setSearchedMovie","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setIsLoading","fetch","then","res","json","catch","Response","Error","newMovie","Title","Plot","Poster","imdbID","error","console","finally","some","prevMovie","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71e71f36.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl\n              || 'https://via.placeholder.com/360x270.png?text=no%20preview'}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, {\n  Dispatch, SetStateAction, useEffect, useState,\n} from 'react';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ninterface FindMovieProps {\n  setIsTitle: Dispatch<SetStateAction<boolean>>\n  setTitle: Dispatch<SetStateAction<string>>\n  movie: Movie;\n  isTitle: boolean;\n  isLoading: boolean;\n  handleAddMovie: (movie: Movie) => void\n}\n\nexport const FindMovie: React.FC<FindMovieProps> = (\n  {\n    setIsTitle, setTitle, movie, isTitle, isLoading, handleAddMovie,\n  },\n) => {\n  const [query, setQuerty] = useState<string>('');\n\n  const handleFormSubmint = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    (setTitle(query));\n  };\n\n  useEffect(() => {\n    setIsTitle(false);\n  }, [query, setIsTitle]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => handleFormSubmint(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onChange={(event) => setQuerty(event.target.value)}\n            />\n          </div>\n\n          {(isTitle) ? (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          ) : null}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button ${isLoading ? 'is-light' : 'is-loading'}`}\n              {...(!query && { disabled: true })}\n            >\n              {movie.title ? 'Search again' : 'Find a movie' }\n            </button>\n          </div>\n\n          {(movie.title) && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  handleAddMovie(movie);\n                  setQuerty('');\n                  setTimeout(() => setQuerty(''), 0);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          ) }\n        </div>\n      </form>\n\n      {movie.title && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [searchedMovie, setSearchedMovie] = useState<Movie>({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [title, setTitle] = useState<string>('');\n  const [isTitle, setIsTitle] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    const isDuplicate\n      = movies.some((movie) => movie.imdbId === newMovie.imdbId);\n\n    if (!isDuplicate) {\n      setMovies(prevMovie => [...prevMovie, newMovie]);\n    }\n\n    setTitle('');\n    const resetMovie = {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    };\n\n    setSearchedMovie(resetMovie);\n  };\n\n  useEffect(() => {\n    if (!title) {\n      return;\n    }\n\n    setIsLoading(false);\n    getMovie(title)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .then((movie: any) => {\n        if (movie.Response === 'False' && title) {\n          setIsTitle(true);\n        } else {\n          const newMovie = {\n            title: movie.Title,\n            description: movie.Plot,\n            imgUrl: movie.Poster !== 'N/A' ? movie.Poster\n              : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n            imdbId: movie.imdbID,\n          };\n\n          setSearchedMovie(newMovie);\n          setIsTitle(false);\n        }\n      })\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        console.error('Unexpected error:', error);\n      })\n      .finally(() => {\n        setIsLoading(true);\n      });\n  }, [title, searchedMovie.title]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setIsTitle={setIsTitle}\n          setTitle={setTitle}\n          movie={searchedMovie}\n          isTitle={isTitle}\n          isLoading={isLoading}\n          handleAddMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5757dfec';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}